<?xml version="1.0" encoding="utf-8" ?>
<!-- build xml -->

<project name="symfony_site" default="main">

    <property file="./build.properties"/>

    <!-- Properties -->

    <property name="dir.build" value="${project.basedir}"/>

    <property name="dir.app" value="${project.basedir}/app"/>
    <property name="dir.src" value="${project.basedir}/src"/>
    <property name="dir.docs" value="${dir.build}/docs"/>
    <property name="dir.docs.phpdoc" value="${dir.docs}/phpdoc"/>
    <property name="dir.docs.docblox" value="${dir.docs}/docblox"/>
    <property name="dir.reports" value="${dir.build}/logs"/>
    <property name="dir.reports.pdepend" value="${dir.reports}/pdepend"/>
    <property name="dir.reports.coverage" value="${dir.reports}/coverage"/>
    <property name="dir.reports.build" value="${dir.reports}/build"/>


    <!-- ============================================  -->
    <!-- Target: prepare                               -->
    <!-- ============================================  -->
    <target name="prepare" description="Create build directories.">
        <echo msg="Creating build directories ..."/>
        <mkdir dir="${dir.docs}"/>
        <mkdir dir="${dir.docs.phpdoc}"/>
        <mkdir dir="${dir.docs.docblox}"/>
        <mkdir dir="${dir.reports}"/>
        <mkdir dir="${dir.reports.pdepend}"/>
        <mkdir dir="${dir.reports.coverage}"/>
        <mkdir dir="${dir.reports.build}"/>

        <touch file="${dir.reports.build}/db.log"/>
    </target>

    <target name="test.fixture" description="Load fata fixtures for testing functionality/">
        <echo msg="Generating testing data..."/>
        <exec passthru="true" logoutput="true" checkreturn="true" command="yes | php bin/console doctrine:fixtures:load"
              dir="./"/>
    </target>


    <!---
       ============ composer ==================
   -->
    <target name="composer-download">
        <exec
                command="curl -sS ${url.composer.download} | php -- --install-dir=${dir.composer.bin}"
                passthru="true"
        />
        <exec
                command="chmod +x ${dir.composer.bin}/${cmd.composer}"
                passthru="true"
        />
        <phingcall inheritRefs="true" target="composer-self-update">
        </phingcall>
    </target>
    <target name="composer-self-update">
        <exec
                command="${cmd.composer} self-update --working-dir ${dir.project}"
                passthru="true"
        />
    </target>
    <target name="composer-optimize">
        <exec
                command="${cmd.composer} dump-autoload --optimize --working-dir ${dir.project}"
                passthru="true"
        />
    </target>


    <target name="composer-install">
        <phingcall inheritRefs="true" target="composer-self-update">
        </phingcall>
        <exec
                command="${cmd.composer} install --working-dir ${dir.project}"
                passthru="true"
        />
        <phingcall inheritRefs="true" target="composer-optimize">
        </phingcall>
    </target>
    <target name="composer-update">
        <phingcall inheritRefs="true" target="composer-self-update">
        </phingcall>
        <exec
                command="${cmd.composer} update --working-dir ${dir.project}"
                passthru="true"
        />
        <phingcall inheritRefs="true" target="composer-self-update">
        </phingcall>
        <phingcall inheritRefs="true" target="composer-optimize">
        </phingcall>
    </target>


    <target name="clear">
        <delete failonerror="true" verbose="true" includeemptydirs="true">
            <fileset dir="${dir.build}" includes="**/*"/>
        </delete>
    </target>

    <!-- ============================================  -->
    <!-- don't work -->
    <!-- Target: database.up -->
    <!-- ============================================  -->
    <target name="database.up" description="Create database and schema.">
        <exec command="php bin/console doctrine:database:create"
              passthru="true"
              logoutput="true"
              error="${dir.reports.build}/db.log"
              dir="${project.basedir}"
              checkreturn="true">

        </exec>
        <exec command="php bin/console doctrine:schema:create"
              passthru="true"
              logoutput="true"
              error="${dir.reports.build}/db.log"
              dir="${project.basedir}"
              checkreturn="true">
        </exec>
    </target>
</project>
